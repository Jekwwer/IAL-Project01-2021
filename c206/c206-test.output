C206 - Doubly Linked List - Basic Tests
---------------------------------------

[TEST01]
List initialization
~~~~~~~~~~~~~~~~~~~~
-----------------
-----------------

[TEST02]
We will call the DLL_InsertFirst operation 2 times and the DLL_InsertLast operation 2 times.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
 	1
-----------------
-----------------
 	2
 	1
-----------------
-----------------
 	2
 	1
 	3
-----------------
-----------------
 	2
 	1
 	3
 	4
-----------------

[TEST03]
We will test the DLL_First function with an inactive list and the DLL_IsActive function.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
 	2	 <= this is the active element 
 	1
 	3
 	4
-----------------
Operation DLL_IsActive returns value true.

[TEST04]
We will test the DLL_Last function.
~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
 	2
 	1
 	3
 	4	 <= this is the active element 
-----------------
Operation DLL_IsActive returns value true.

[TEST05]
Test the DLL_GetValue function with activity on the last item
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Operation DLL_GetValue returns content 4.

[TEST06]
Test the DLL_Previous function - we will call it 3 times, activity will remain on the first item.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
 	2
 	1
 	3	 <= this is the active element 
 	4
-----------------
-----------------
 	2
 	1	 <= this is the active element 
 	3
 	4
-----------------
-----------------
 	2	 <= this is the active element 
 	1
 	3
 	4
-----------------
Operation DLL_IsActive returns value true.

[TEST07]
Update the content of the active item.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
 	5	 <= this is the active element 
 	1
 	3
 	4
-----------------
Operation DLL_IsActive returns value true.
Operation DLL_GetValue returns content 5.

[TEST08]
Test the DLL_Next function - we will call it 3 times, activity will remain on the last item.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
 	5
 	1	 <= this is the active element 
 	3
 	4
-----------------
-----------------
 	5
 	1
 	3	 <= this is the active element 
 	4
-----------------
-----------------
 	5
 	1
 	3
 	4	 <= this is the active element 
-----------------
Operation DLL_IsActive returns value true.

[TEST09]
We will perform DLL_Next once more - activity will be lost.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
 	5
 	1
 	3
 	4
-----------------
Operation DLL_IsActive returns value false.

[TEST10]
We will set activity to the beginning and then cancel it with the DLL_Previous operation.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
 	5	 <= this is the active element 
 	1
 	3
 	4
-----------------
-----------------
 	5
 	1
 	3
 	4
-----------------
Operation DLL_IsActive returns value false.

[TEST11]
Attempt to use DLL_GetValue with an inactive list => handled error.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*ERROR* The program has performed an illegal operation.
Operation DLL_GetValue called function DLL_Error.

[TEST12]
Use the DLL_GetFirst operation with an inactive list
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Operation DLL_GetFirst returns content 5.

[TEST13]
Use the DLL_GetLast operation with an inactive list
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Operation DLL_GetLast returns content 4.

[TEST14]
Use the DLL_DeleteFirst operation with an inactive list
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
 	1
 	3
 	4
-----------------
Operation DLL_IsActive returns value false.

[TEST15]
Use the DLL_DeleteLast operation with an inactive list
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
 	1
 	3
-----------------
Operation DLL_IsActive returns value false.

[TEST16]
We will try DLL_DeleteAfter with activity on the last item.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
 	1
 	3	 <= this is the active element 
-----------------
-----------------
 	1
 	3	 <= this is the active element 
-----------------
Operation DLL_IsActive returns value true.

[TEST17]
The DLL_DeleteBefore operation will now delete the first item.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
 	3	 <= this is the active element 
-----------------
Operation DLL_IsActive returns value true.

[TEST18]
Finally, we will dispose of the list.
~~~~~~~~~~~~~~~~~~~~~~~
-----------------
-----------------
Operation DLL_IsActive returns value false.

----- C206 - The End of Basic Tests -----
